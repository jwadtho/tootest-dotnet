# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Update Secrts

on:

  workflow_dispatch:


env:
  REGION_ID: cn-shanghai
  ACR_EE_REGISTRY: xom-ecomm-acr02-registry.cn-shanghai.cr.aliyuncs.com
  ACR_EE_INSTANCE_ID: cri-3fynibeigjxpi5o6
  ACR_EE_NAMESPACE: tootest
  ACR_EE_IMAGE: tootest-dotnet

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '5.0.x' ]

    steps:
    - uses: actions/checkout@v2


    - name: Login to ACR EE with the AccessKey pair
      uses: aliyun/acr-login@v1
      with:
        login-server: "https://${{ env.ACR_EE_REGISTRY }}"
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECR


    - name: Generate secret from docker config
      run: |
        BASE64=$(cat ${{ env.DOCKER_CONFIG }}/config.json | base64 -w 0)
        sed -i "s/BASE64_CREDENTIAL/$BASE64/g" ./kubernetes/pullImageSecret.yml

    - name: Setting context for Kubernetes cluster of Alibaba Cloud Kubernetes Service (ACK)
      uses: aliyun/ack-set-context@v1
      with:
        access-key-id: ${{ secrets.ACCESS_KEY_ID }}
        access-key-secret: ${{ secrets.ACCESS_KEY_SECRET }}
        cluster-id: ${{ secrets.CLUSTER_ID }}

    # Prepare k8s yaml files
    - name: Set variable to yaml files
      run: |
        sed -e "s#{NAMESPACE}#tootest#g" kubernetes/pullImageSecret.yml > kubernetes/pullImageSecret.yaml
        
        kubectl apply -R -f kubernetes/pullImageSecret.yaml
